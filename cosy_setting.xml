<application>
  <component name="CosySettings">
    <option name="dedicatedDomainUrl" value="" />
    <option name="localStoragePath" value="C:\Users\jiangfeng\.lingma" />
    <option name="manualOpenLocalModel" value="true" />
    <option name="methodQuickSwitchEnum" value="DISABLED" />
    <option name="parameter">
      <ChangeUserSettingParams>
        <option name="allowReportUsage" value="true" />
        <option name="cloud">
          <CloudModelParam>
            <option name="autoTrigger">
              <CloudModelAutoTrigger>
                <option name="enable" value="true" />
                <option name="generateLength" value="level_1" />
                <option name="modelLevel" value="large" />
              </CloudModelAutoTrigger>
            </option>
            <option name="enable" value="false" />
            <option name="manualTrigger">
              <CloudModelManualTrigger>
                <option name="generateLength" value="level_2" />
                <option name="modelLevel" value="large" />
              </CloudModelManualTrigger>
            </option>
          </CloudModelParam>
        </option>
        <option name="local">
          <LocalModelParam>
            <option name="enable" value="false" />
            <option name="inferenceMode" value="auto" />
            <option name="maxCandidateNum" value="3" />
          </LocalModelParam>
        </option>
      </ChangeUserSettingParams>
    </option>
    <option name="recentQueries">
      <map>
        <entry key="cyy-ticket|201185213769535128">
          <value>
            <list>
              <option value="写一个二分查找" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="为啥不用@Resource呢？" />
            </list>
          </value>
        </entry>
        <entry key="dataStructuresAndAlgorithm|201185213769535128">
          <value>
            <list>
              <option value="/explain code" />
            </list>
          </value>
        </entry>
        <entry key="java-basic-learning|201185213769535128">
          <value>
            <list>
              <option value="public int removeDuplicates(int[] nums) {&#10;        int curVal = nums[0];&#10;        int index = 1;&#10;        int count = 1;&#10;        for (int i = 1; i &lt; nums.length; i++) {&#10;            if (curVal == nums[i]) {&#10;                if (++count &lt; 3) {&#10;                    nums[index++] = nums[i];&#10;                }&#10;            } else {&#10;                nums[index++] = nums[i];&#10;                curVal = nums[i];&#10;                count = 1;&#10;            }&#10;        }&#10;        return index;&#10;    }帮我优化一下" />
              <option value="/generate optimization" />
            </list>
          </value>
        </entry>
        <entry key="mtc-show|201185213769535128">
          <value>
            <list>
              <option value="/explain code" />
              <option value="这个是小时，帮我转换为long类型的时间" />
              <option value="/explain code" />
              <option value="/explain code" />
              <option value="WaitListCloseSessionJob==&gt;closeDTO={&quot;beginTime&quot;:&quot;2024-04-23T23:27:54.995&quot;,&quot;endTime&quot;:&quot;2024-04-23T23:28:54.995&quot;}" />
              <option value="打印出来的时间为啥有T，" />
              <option value="@这个没有生效吗？JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;, timezone = &quot;GMT+8&quot;)" />
              <option value="/generate optimization" />
              <option value="Optional.ofNullable(inventoryWaitListBuyerStockInfo).map(InventoryWaitListBuyerStockInfo::getLeftStocks).orElse(0)  这个可能会返回null吗？" />
              <option value="如果getLeftStocks()返回了null呢？最终结果还是不会返回null吗？" />
              <option value="/generate optimization" />
            </list>
          </value>
        </entry>
        <entry key="spring-boot-disruptor-study|201185213769535128">
          <value>
            <list>
              <option value="/generate optimization" />
              <option value="new int[1024]这个占用多少M" />
              <option value="4字节是4kb吗" />
              <option value="/explain code" />
              <option value="这里一直getAndIncrement，那线程数字岂不是越来越大？" />
            </list>
          </value>
        </entry>
        <entry key="threadStudy|201185213769535128">
          <value>
            <list>
              <option value="/explain code" />
              <option value="/generate comment" />
              <option value="/explain code" />
              <option value="/generate comment" />
              <option value="/generate optimization" />
              <option value="/generate comment" />
              <option value="/generate optimization" />
              <option value="/generate optimization" />
              <option value="/generate optimization" />
              <option value="/generate comment" />
              <option value="创建并初始化一个Object类型的实例。&#10; * 该实例被赋值给final变量a，表示该变量的值不能被改变。" />
              <option value="package deadlock;&#10;&#10;import java.util.concurrent.TimeUnit;&#10;&#10;/**&#10; * @author 江峰&#10; * @create 2019-12-04 13:52&#10; */&#10;public class Deadlock {&#10;    public static void main(String[] args) {&#10;        final Object a = new Object();&#10;        final Object b = new Object();&#10;        Thread threadA = new Thread(() -&gt; {&#10;            synchronized (a) {&#10;                try {&#10;                    System.out.println(&quot;now i in threadA-locka&quot;);&#10;                    TimeUnit.SECONDS.sleep(1);&#10;                    synchronized (b) {&#10;                        System.out.println(&quot;now i in threadA-lockb&quot;);&#10;                    }&#10;                } catch (Exception e) {&#10;                    // ignore&#10;                }&#10;            }&#10;        });&#10;&#10;        Thread threadB = new Thread(() -&gt; {&#10;            synchronized (b) {&#10;                try {&#10;                    System.out.println(&quot;now i in threadB-lockb&quot;);&#10;                    TimeUnit.SECONDS.sleep(1);&#10;                    synchronized (a) {&#10;                        System.out.println(&quot;now i in threadB-locka&quot;);&#10;                    }&#10;                } catch (Exception e) {&#10;                    // ignore&#10;                }&#10;            }&#10;        });&#10;&#10;        threadA.start();&#10;        threadB.start();&#10;    }&#10;&#10;}" />
              <option value="package deadlock;&#10;&#10;import java.util.concurrent.TimeUnit;&#10;&#10;/**&#10; * @author 江峰&#10; * @create 2019-12-04 13:52&#10; */&#10;public class Deadlock {&#10;    public static void main(String[] args) {&#10;        final Object a = new Object();&#10;        final Object b = new Object();&#10;        Thread threadA = new Thread(() -&gt; {&#10;            synchronized (a) {&#10;                try {&#10;                    System.out.println(&quot;now i in threadA-locka&quot;);&#10;                    TimeUnit.SECONDS.sleep(1);&#10;                    synchronized (b) {&#10;                        System.out.println(&quot;now i in threadA-lockb&quot;);&#10;                    }&#10;                } catch (Exception e) {&#10;                    // ignore&#10;                }&#10;            }&#10;        });&#10;&#10;        Thread threadB = new Thread(() -&gt; {&#10;            synchronized (b) {&#10;                try {&#10;                    System.out.println(&quot;now i in threadB-lockb&quot;);&#10;                    TimeUnit.SECONDS.sleep(1);&#10;                    synchronized (a) {&#10;                        System.out.println(&quot;now i in threadB-locka&quot;);&#10;                    }&#10;                } catch (Exception e) {&#10;                    // ignore&#10;                }&#10;            }&#10;        });&#10;&#10;        threadA.start();&#10;        threadB.start();&#10;    }&#10;&#10;}&#10;帮我把所有的start获取出来" />
              <option value="帮我创建一个线程池，线程数量由CPU核数决定" />
              <option value="Spring项目生产环境使用" />
              <option value="帮我创建一个线程池，线程数量由CPU核数决定，Spring项目生产环境使用" />
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="showCheckReportUsage" value="false" />
    <option name="showInlineAcceptTips" value="false" />
    <option name="showInlineTriggerTips" value="false" />
  </component>
</application>