<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="566" />
    <option name="newTranslationDialogX" value="760" />
    <option name="newTranslationDialogY" value="449" />
    <histories>
      <item value="repeat" />
      <item value="重复" />
      <item value="实名认证" />
      <item value="结构" />
      <item value="inventory" />
      <item value="清单" />
      <item value="明细" />
      <item value="Venue Concrete Plan Copy Service" />
      <item value="Venue Concrete Plan Api" />
      <item value="差值" />
      <item value="逻辑" />
      <item value="逻辑删除" />
      <item value="查看预留清单" />
      <item value="Detail" />
      <item value="Trigger" />
      <item value="你好" />
      <item value="ni" />
      <item value="fanyi " />
      <item value="库存不足" />
      <item value="Property that defines whether it is ok to just ignore any unrecognized properties during deserialization. If true, all properties that are unrecognized -- that is, there are no setters or creators that accept them -- are ignored without warnings (although handlers for unknown properties, if any, will still be called) without exception." />
      <item value="包装" />
      <item value="忽略" />
      <item value="Together" />
      <item value="折扣系数" />
      <item value="Actual" />
      <item value="实际" />
      <item value="Indicate that the proxy should be exposed by the AOP framework as a {@code ThreadLocal} for retrieval via the {@link org.springframework.aop.framework.AopContext} class. Off by default, i.e. no guarantees that {@code AopContext} access will work. @since 4.3.1" />
      <item value="Effective" />
      <item value="有效的" />
      <item value="满足" />
      <item value="命中" />
      <item value="remainder" />
      <item value="余数" />
      <item value="优惠" />
      <item value="选中的票面" />
      <item value="constitute" />
      <item value="超出限购的数量" />
      <item value="normal" />
      <item value="正常" />
      <item value="文案" />
      <item value="prepare" />
      <item value="是否可以下单" />
      <item value="Discounted" />
      <item value="优惠后的价格" />
      <item value="封顶" />
      <item value="不封顶" />
      <item value="Sync Admission Item Job" />
      <item value="An object that creates new threads on demand. Using thread factories removes hardwiring of calls to {@link ThreadThread(Runnable) new Thread}, enabling applications to use special thread subclasses, priorities, etc. &lt;p&gt; The simplest implementation of this interface is just: &lt;pre&gt; {@code class SimpleThreadFactory implements ThreadFactory { public Thread newThread(Runnable r) { return new Thread(r); } }}&lt;pre&gt; The {@link ExecutorsdefaultThreadFactory} method provides a more useful simple implementation, that sets the created thread context to known values before returning it. @since 1.5 @author Doug Lea" />
      <item value="An object that creates new threads on demand. Using thread factories removes hardwiring of calls to {@link ThreadThread(Runnable) new Thread}, enabling applications to use special thread subclasses, priorities, etc." />
      <item value="Decorate the given {@code Runnable}, returning a potentially wrapped" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="160" />
        <entry key="ENGLISH" value="160" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SPANISH" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1644219966111" />
  </component>
</application>